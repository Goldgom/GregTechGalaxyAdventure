
# Options related to enabling/disabling specific features
# See the jsons folder to customize the temperature of specific blocks, liquids, armors, etc.
[core]
	# Whether the temperature system is enabled.
	"Temperature Enabled" = true
	# Whether the thirst system is enabled.
	"Thirst Enabled" = false
	# Whether heart fruits are functional and generate in-world.
	"Heart Fruits Enabled" = true
	# Whether body members receive localized damages.
	"Localized Body Damage Enabled" = true
	# If enabled, information like position and direction will be hidden from the debug screen (F3).
	"Hide Info From Debug" = true

	[core.advanced]
		# How often player temperature is regularly synced between the client and server, in ticks.
		# Lower values will increase accuracy at the cost of performance
		#Range: > 1
		"Routine Packet Sync" = 30

# Options related to the player food data
[food]
	# Food exhausted every 10 ticks. Increase the base minecraft food exhaustion.
	#Range: 0.0 ~ 1000.0
	"Base Food Exhaustion" = 0.03

# Options related to the temperature system
[temperature]
	# If enabled, players will take damage from the effects of temperature.
	"Dangerous Temperature Effects" = true
	# How much of an effect being on fire has on a player's temperature.
	#Range: -1000.0 ~ 1000.0
	"Player On Fire Modifier" = 12.5
	# How much of an effect sprinting has on a player's temperature.
	#Range: -1000.0 ~ 1000.0
	"Player Sprint Modifier" = 1.5
	# How much the effects of the player's altitude on temperature are multiplied starting at Y 64.
	# Each 64 blocks further from Y 64 will reduce player's temperature by this value.
	#Range: -1000.0 ~ 1000.0
	"Altitude Modifier" = -3.0

	[temperature.on-death]
		# If enabled, players will be immune to temperature effects after death.
		"Temperature Resistance Enabled" = true
		# Temperature resistance period in ticks while the player is immune to temperature effects.
		#Range: 0 ~ 100000
		"Temperature Resistance Time" = 1800

	[temperature.secondary_effects]
		# If enabled, players will also receive other effects from their current temperature state.
		# If the player is too hot, hydration will deplete faster. If the player is too cold, hunger will deplete faster.
		"Secondary Temperature Effects" = true
		# How much thirst exhaustion will be added every 50 ticks with no amplification effect.
		#Range: 0.0 ~ 1000.0
		"Heat Thirst Effect Modifier" = 0.1
		# How much food exhaustion will be added every 50 ticks with no amplification effect.
		# As reference, the hunger effect add 0.025 food exhaustion every 50 ticks.
		#Range: 0.0 ~ 1000.0
		"Cold Hunger Modifier" = 0.05

	[temperature.wetness]
		# How a player's "wetness" is determined. Accepted values are as follows:
		#   DISABLE - Disable wetness and any effects on temperature it might have.
		#   SIMPLE - Wetness is only based on whether you're in water/rain or not. Slightly better in terms of performance.
		#   DYNAMIC - Wetness can change dynamically based on various conditions, and does not instantly go away when moving out of water.
		# Any other value will default to DISABLE.
		"Wetness Mode" = "DYNAMIC"
		# How much being wet influences the player's temperature.
		#Range: -1000.0 ~ 1000.0
		"Wetness Modifier" = -10.0
		# How much the wetness decrease when out of water, in case of dynamic wetness.
		#Range: -1000 ~ 0
		"Wetness Decrease" = -5
		# How much the wetness increase when under rain, in case of dynamic wetness.
		#Range: 0 ~ 1000
		"Wetness Under Rain Increase" = 5
		# How much the wetness increase when the player is in a fluid, scale by the amount of fluid in the block, in case of dynamic wetness.
		# The defined value is for a full block of fluid, and goes up to 2 times this value when fully immerge.
		#Range: 0 ~ 1000
		"Wetness In Fluid Increase" = 10

	# Default temperature added to the player, based on the dimension.
	[temperature.dimension-default]
		#Range: -1000.0 ~ 1000.0
		"Default Overworld Modifier" = 20.0
		#Range: -1000.0 ~ 1000.0
		"Default Nether Modifier" = 30.0
		#Range: -1000.0 ~ 1000.0
		"Default The End Modifier" = 5.0

	[temperature.huddling]
		# How much nearby players increase the ambient temperature by.
		# Note that this value stacks!
		#Range: -1000.0 ~ 1000.0
		"Player Huddling Modifier" = 0.5
		# The radius, in blocks, around which players will add to each other's temperature.
		#Range: 0 ~ 10
		"Player Huddling Radius" = 1

	[temperature.biomes]
		# How much a biome's temperature effects are multiplied.
		#Range: 0.0 ~ Infinity
		"Biome Temperature Multiplier" = 16.0
		# Whether biomes will have an effect on a player's temperature.
		"Biomes affect Temperature" = true
		# How much hot biome's dryness will make nights really cold.
		# Affects only dry (minecraft down fall <0.2) and hot biome.
		# 0 means no dryness effect; 0.5 means the biome temp will be divided by 2 at the middle of the night.
		#Range: 0.0 ~ 1.0
		"Biome's Dryness Multiplier" = 0.8

	[temperature.weather]
		# How much of an effect rain has on temperature.
		#Range: -1000.0 ~ 1000.0
		"Rain Temperature Modifier" = -2.0
		# How much of an effect snow has on temperature.
		#Range: -1000.0 ~ 1000.0
		"Snow Temperature Modifier" = -6.0

	[temperature.time]
		# How much Time has effect on Temperature.
		# Maximum effect at noon (positive) and midnight (negative), following a sinusoidal
		#Range: 0.0 ~ Infinity
		"Time Based Temperature Modifier" = 2.0
		# How strongly time in extreme temperature biomes affect player's temperature.
		# Extreme temperature biomes (like snowy taiga, deserts, ...) will multiply the time based temperature by this value, while temperate biome won't be affected by this value, following a linear.
		#Range: 1.0 ~ Infinity
		"Biome Time Multiplier" = 1.75
		# Staying in the shade or during cloudy weather will reduce player's temperature by this amount based on time of the day (maximum effect at noon, following sinusoidal).
		# Only effective in hot biomes and during day time!
		#Range: -1000.0 ~ 1000.0
		"Shade Time Modifier" = -6.0

	# Temperature coat adds temperature effects on armors by using the sewing table.
	# Adaptive means the coating will maintain the player's temperature temperate.
	[temperature.coat]

		# Add an adaptive heating effect on armors.
		[temperature.coat.heating]
			#Range: 0.0 ~ 1000.0
			"Heating Coat I" = 1.0
			#Range: 0.0 ~ 1000.0
			"Heating Coat II" = 2.0
			#Range: 0.0 ~ 1000.0
			"Heating Coat III" = 3.0

		# Add an adaptive cooling effect on armors.
		[temperature.coat.cooling]
			#Range: 0.0 ~ 1000.0
			"Cooling Coat I" = 1.0
			#Range: 0.0 ~ 1000.0
			"Cooling Coat II" = 2.0
			#Range: 0.0 ~ 1000.0
			"Cooling Coat III" = 3.0

		# Add an adaptive temperature effect on armors that can both heat and cool the player.
		[temperature.coat.thermal]
			#Range: 0.0 ~ 1000.0
			"Thermal Coat I" = 1.0
			#Range: 0.0 ~ 1000.0
			"Thermal Coat II" = 2.0
			#Range: 0.0 ~ 1000.0
			"Thermal Coat III" = 3.0

	[temperature.advanced]
		# Maximum distance, in blocks, where thermal sources will have an effect on temperature.
		#Range: 1 ~ 40
		"Temperature Influence Maximum Distance" = 20
		# How strongly distance above the player is reduced where thermal sources will have an effect on temperature.
		# Example max dist is 10, up mult is 0.75 -> max distance is 10 * 0.75 = 7.5 blocks above the player.
		# Logic is as the heat goes up, the strength of the heat source above the player is decreased faster with distance.
		#Range: 0.0 ~ 1.0
		"Temperature Influence Up Distance Multiplier" = 0.75
		# How strongly distance outside a structure is reduced where thermal sources will have an effect on temperature.
		# The outside maximum distance is defined as the maximum distance * this value
		#Range: 0.0 ~ 1.0
		"Temperature Influence Outside Distance Multiplier" = 0.5

		# The player's temperature will be adjusted at each temperature tick time,
		# by an amount of temperature defined between the minimum and the maximum temperature modification adjusted linearly.
		[temperature.advanced.temperature-modification]
			# Amount of time in ticks between 2 player temperature modification. The bigger is this value, the more time it takes between temperature adjustments.
			#Range: > 5
			"Temperature Tick Time" = 20
			# Maximum amount of temperature the player's temperature can be modified at each temperature tick time.
			# Correspond to the amount of temperature given when temperature difference is maximum.
			#Range: 0.1 ~ 2.147483647E9
			"Maximum Temperature Modification" = 1.0
			# Minimum amount of temperature the player's temperature can be modified at each temperature tick time.
			# Correspond to the amount of temperature given when there is no temperature difference
			#Range: 0.1 ~ 2.147483647E9
			"Minimum Temperature Modification" = 0.2

	[temperature.integration]

		[temperature.integration.seasons]
			# If Serene Seasons is installed, then seasons will have an effect on the player's temperature.
			"Seasons affect Temperature" = true
			# If the tropical seasons are disabled, the normal summer-autumn-winter-spring seasons are applied.
			# If disabled, dry and wet seasons are applied for hot biomes.
			"Tropical Seasons Enabled" = true
			# If season cards are enabled, season cards will appear at every season changes.
			"Season Cards Enabled" = true
			# If default season is enabled, when serene season defines no season effect in a biome, the normal season temperature will be applied.
			# If disabled, when serene season defines no season effects, no season temperature will be applied.
			"Default Season Enabled" = true

			# Temperature modifiers per season in temperate biomes. The value is reached at the middle of the sub season, and smoothly transition from one to another.
			[temperature.integration.seasons.temperate]

				[temperature.integration.seasons.temperate.spring]
					#Range: -1000.0 ~ 1000.0
					"Early Spring Modifier" = -3.0
					#Range: -1000.0 ~ 1000.0
					"Mid Spring Modifier" = 0.0
					#Range: -1000.0 ~ 1000.0
					"Late Spring Modifier" = 3.0

				[temperature.integration.seasons.temperate.summer]
					#Range: -1000.0 ~ 1000.0
					"Early Summer Modifier" = 5.0
					#Range: -1000.0 ~ 1000.0
					"Mid Summer Modifier" = 8.0
					#Range: -1000.0 ~ 1000.0
					"Late Summer Modifier" = 5.0

				[temperature.integration.seasons.temperate.autumn]
					#Range: -1000.0 ~ 1000.0
					"Early Autumn Modifier" = 3.0
					#Range: -1000.0 ~ 1000.0
					"Mid Autumn Modifier" = 0.0
					#Range: -1000.0 ~ 1000.0
					"Late Autumn Modifier" = -3.0

				[temperature.integration.seasons.temperate.winter]
					#Range: -1000.0 ~ 1000.0
					"Early Winter Modifier" = -7.0
					#Range: -1000.0 ~ 1000.0
					"Mid Winter Modifier" = -12.0
					#Range: -1000.0 ~ 1000.0
					"Late Winter Modifier" = -7.0

			# Temperature modifiers per season in tropical biomes.
			[temperature.integration.seasons.tropical]

				[temperature.integration.seasons.tropical.wet-season]
					#Range: -1000.0 ~ 1000.0
					"Early Wet Season Modifier" = -1.0
					#Range: -1000.0 ~ 1000.0
					"Mid Wet Season Modifier" = -5.0
					#Range: -1000.0 ~ 1000.0
					"Late Wet Season Modifier" = -1.0

				[temperature.integration.seasons.tropical.dry-season]
					#Range: -1000.0 ~ 1000.0
					"Early Dry Season Modifier" = 3.0
					#Range: -1000.0 ~ 1000.0
					"Mid Dry Season Modifier" = 7.0
					#Range: -1000.0 ~ 1000.0
					"Late Dry Season Modifier" = 3.0

		[temperature.integration.terrafirmacraft]
			# If TerraFirmaCraft is installed, then biome, time, season (if serene seasons installed) and altitude modifiers will be disabled, and TerraFirmaCraft calculation used instead.
			# All other modifiers remain to calculate Player temperature.
			"TerraFirmaCraft Temperature Override Enabled" = true
			# How much the temperature given from TerraFirmaCraft is multiplied, to adjust with the other temperature effects.
			#Range: 0.0 ~ 1000.0
			"TerraFirmaCraft Temperature Multiplier" = 1.0

# Options related to thirst
[thirst]
	# If enabled, players will take damage from the complete dehydration.
	"Dangerous Dehydration" = true
	# Scaling of the damages dealt when completely dehydrated. Each tick damage will be increased by this value.
	#Range: 0.0 ~ 1000.0
	"Dehydration Damage Scaling" = 0.3
	# How many thirst exhaustion will be added every 50 ticks when the player suffers from not amplified Thirst Effect.
	# The player will suffer Thirst Effect from dirty water by example.
	#Range: 0.0 ~ 1000.0
	"Thirst Effect Modifier" = 0.25

	[thirst.exhaustion]
		# Thirst exhausted every 10 ticks.
		#Range: 0.0 ~ 1000.0
		"Base Thirst Exhaustion" = 0.03
		# Thirst exhausted when sprinting, replacing the base thirst exhausted.
		#Range: 0.0 ~ 1000.0
		"Sprinting Thirst Exhaustion" = 0.15
		# Thirst exhausted on every jump.
		#Range: 0.0 ~ 1000.0
		"On Jump Thirst Exhaustion" = 0.3
		# Thirst exhausted on every block break.
		#Range: 0.0 ~ 1000.0
		"On Block Break Thirst Exhaustion" = 0.1
		# Thirst exhausted on every attack.
		#Range: 0.0 ~ 1000.0
		"On Attack Thirst Exhaustion" = 0.5

	[thirst.canteen]
		# Capacity of the canteen used to store water.
		#Range: 0 ~ 1000
		"Canteen Capacity" = 5
		# Capacity of the large canteen used to store water.
		#Range: 0 ~ 1000
		"Large Canteen Capacity" = 10
		# Allow override of purified water stored in canteen with normal water.
		"Allow Override Purified Water" = true

	[thirst.rain]
		# Whether players can drink from rain or not.
		"Drink From Rain" = true
		# Amount of hydration recovered when drinking from the rain.
		#Range: 0 ~ 20
		Hydration = 1
		# Amount of saturation recovered when drinking from the rain.
		#Range: 0.0 ~ 20.0
		Saturation = 0.0
		# Chance of getting an effect while drinking from the rain.
		#Range: 0.0 ~ 1.0
		"Effect Chance" = 0.0
		# Possible effect given while drinking from the rain.
		Effect = ""
		# Duration in ticks of the possible effect given while drinking from the rain.
		#Range: 0 ~ 100000
		"Effect Duration" = 0

	[thirst.water]
		# Whether players can drink from water (or flowing water) block or not.
		"Drink From Water" = true
		# Amount of hydration recovered while drinking water.
		#Range: 0 ~ 20
		Hydration = 3
		# Amount of saturation recovered while drinking water.
		#Range: 0.0 ~ 20.0
		Saturation = 0.0
		# Chance of getting an effect while drinking water.
		#Range: 0.0 ~ 1.0
		"Effect Chance" = 0.75
		# Possible effect given while drinking water.
		Effect = "legendarysurvivaloverhaul:thirst"
		# Duration in ticks of the possible effect given while drinking water.
		#Range: 0 ~ 100000
		"Effect Duration" = 600

	# Amount recovered by potions with effects
	[thirst.potion]
		# Amount of hydration recovered while drinking a potion.
		#Range: 0 ~ 20
		Hydration = 3
		# Amount of saturation recovered while drinking a potion.
		#Range: 0.0 ~ 20.0
		Saturation = 0.3
		# Chance of getting an effect while drinking a potion.
		#Range: 0.0 ~ 1.0
		"Effect Chance" = 0.0
		# Possible effect given while drinking a potion.
		Effect = ""
		# Duration in ticks of the possible effect given while drinking a potion.
		#Range: 0 ~ 100000
		"Effect Duration" = 0

	# Default value for purified water
	[thirst.purified-water]
		# Amount of hydration recovered while drinking purified water.
		#Range: 0 ~ 20
		Hydration = 6
		# Amount of saturation recovered while drinking purified water.
		#Range: 0.0 ~ 20.0
		Saturation = 1.5
		# Chance of getting an effect while drinking purified water.
		#Range: 0.0 ~ 1.0
		"Effect Chance" = 0.0
		# Possible effect given while drinking purified water.
		Effect = ""
		# Duration in ticks of the possible effect given while drinking purified water.
		#Range: 0 ~ 100000
		"Effect Duration" = 0

	[thirst.juices]
		# Whether the player retrieves a glass bottle after drinking a juice.
		"Glass Bottle Loot After Drinking A Juice" = true

	[thirst.integration]

		[thirst.integration.vampirism]
			# If Vampirism is installed and if thirst enabled while being a vampire, keep the thirst system in addition to the vampiric one.
			# If disabled, the thirst system will be disabled for vampires.
			"Thirst Enabled If Vampire" = false

# Options related to heart fruits
[heart-fruits]
	# Maximum number of additional hearts that can be given by Heart Fruits.
	#Range: > 1
	"Maximum Additional Hearts" = 10
	# The number of additional hearts lost on death.
	# Set to -1 to force loss of all additional hearts on death.
	# Set to 0 to make additional hearts permanent.
	#Range: > -1
	"Hearts Lost On Death" = -1

	[heart-fruits.effects]
		# Amount of hearts gained from eating a Heart Fruit.
		#Range: > 1
		"Additional Hearts Per Heart Fruit" = 1
		# Whether Heart Fruits give a strong regeneration effect.
		"Heart Fruits Give Regen" = true

# Options related to localized body damage
# The damageSourceBodyParts.json allows you to define for specific damage source, the damage spread across specified body parts.
# The damage distribution can either be ONE_OF or ALL. ALL means the damage are equally divided across all body parts.
[body-damage]
	# Multiply the damage taken by the player when shot in the head.
	#Range: 1.0 ~ 1000.0
	"Headshot Multiplier" = 2.0
	# How much of the hurt player's damage is assigned to the body parts.
	#Range: 0.0 ~ 1000.0
	"Body Damage Multiplier" = 1.0
	# How much health ratio are recovered in all body parts from bed sleeping.
	#Range: 0.0 ~ 1.0
	"Body Part Health Ratio Recovered" = 0.3
	# How much health ratio are recovered from bed sleeping.
	#Range: 0.0 ~ 1.0
	"Health Ratio Recovered" = 0.3

	[body-damage.healing-items]
		# Item use time is ticks.
		#Range: 0 ~ 1000
		"Healing Herbs Use Time" = 20
		#Range: 0 ~ 1000
		"Plaster Use Time" = 20
		#Range: 0 ~ 1000
		"Bandage Use Time" = 30
		#Range: 0 ~ 1000
		"Tonic Use Time" = 50
		#Range: 0 ~ 1000
		"Medikit Use Time" = 50

	[body-damage.body-parts-health]
		# How a player's body part health is determined. Accepted values are as follows:
		#   SIMPLE - Body parts will have initial fixed values. The body parts health define the health value.
		#       In this case, if the 'headPartHeath = 10', the head will have '10' health.
		#   DYNAMIC - Body parts will have dynamic values based on the player's max health. In this case, the body parts health is a multiplier of the player's max health.
		#       In this case, if the 'headPartHeath = 0.3', the head will have '0.3' * 'player max health' health.
		# Any other value will default to SIMPLE.
		"Body Part Health Mode" = "DYNAMIC"
		#Range: 0.0 ~ 1000.0
		"Head Part Health" = 0.2
		# Both arms will have this health.
		#Range: 0.0 ~ 1000.0
		"Arms Part Health" = 0.2
		#Range: 0.0 ~ 1000.0
		"Chest Part Health" = 0.3
		# Both legs will have this health.
		#Range: 0.0 ~ 1000.0
		"Legs Part Health" = 0.3
		# Both feet will have this health.
		#Range: 0.0 ~ 1000.0
		"Feet Part Health" = 0.2

	[body-damage.body-parts-effects]

		# Each effect, threshold and amplifier lists must have the same number of items.
		# The first effect will be triggered with the first amplifier value when the first threshold is reach.
		[body-damage.body-parts-effects.head]
			# The list of effects that will be triggered when the head is damaged by the percentage of remaining head health defined in the thresholds.
			"Head Part Effects" = ["legendarysurvivaloverhaul:headache"]
			# The list of amplifiers the effect will have.
			# 0 means the basic effect, 1 means the effect is amplified once.
			"Head Part Effect Amplifiers" = [0]
			# The list of thresholds for which each effect will be triggered. A threshold is a percentage of remaining head health.
			# 0 means the head is fully damaged.
			"Head Part Effect Thresholds" = [0.2]

		[body-damage.body-parts-effects.arms]
			"Arms Part Effects" = ["minecraft:mining_fatigue"]
			"Arms Part Effect Amplifiers" = [0]
			"Arms Part Effect Thresholds" = [0.2]
			# These effects will be triggered when both arms reach the thresholds.
			# If a same effect is used with a higher amplifier, the higher prevails (normal Minecraft behaviour).
			"Both Arms Part Effects" = ["minecraft:weakness"]
			"Both Arms Part Effect Amplifiers" = [0]
			"Both Arms Part Effect Thresholds" = [0.2]

		[body-damage.body-parts-effects.chest]
			"Chest Part Effects" = ["legendarysurvivaloverhaul:vulnerability"]
			"Chest Part Effect Amplifier" = [0]
			"Chest Part Effect Thresholds" = [0.2]

		[body-damage.body-parts-effects.legs]
			"Legs Part Effects" = ["legendarysurvivaloverhaul:hard_falling"]
			"Legs Part Effect Amplifiers" = [0]
			"Legs Part Effect Thresholds" = [0.2]
			"Both Legs Part Effects" = ["legendarysurvivaloverhaul:hard_falling"]
			"Both Legs Part Effect Amplifiers" = [1]
			"Both Legs Part Effect Thresholds" = [0.2]

		[body-damage.body-parts-effects.feet]
			"Feet Part Effects" = ["minecraft:slowness"]
			"Feet Part Effect Amplifiers" = [0]
			"Feet Part Effect Thresholds" = [0.2]
			"Both Feet Part Effects" = ["minecraft:slowness"]
			"Both Feet Part Effect Amplifiers" = [1]
			"Both Feet Part Effect Thresholds" = [0.2]

